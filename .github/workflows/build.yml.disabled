name: Build and Test Brainarr Plugin

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '6.0.x'
  LIDARR_BRANCH: 'plugins'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout Brainarr
      uses: actions/checkout@v4
      with:
        path: brainarr

    - name: Checkout Lidarr
      uses: actions/checkout@v4
      with:
        repository: Lidarr/Lidarr
        ref: ${{ env.LIDARR_BRANCH }}
        path: lidarr

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache Lidarr build
      uses: actions/cache@v4
      with:
        path: lidarr/_output
        key: ${{ runner.os }}-lidarr-${{ hashFiles('lidarr/**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-lidarr-

    - name: Build Lidarr
      working-directory: lidarr
      run: |
        dotnet restore
        dotnet build -c Release

    - name: Set LIDARR_PATH
      shell: bash
      run: |
        if [ -d "lidarr/_output/net6.0" ]; then
          echo "LIDARR_PATH=${{ github.workspace }}/lidarr/_output/net6.0" >> $GITHUB_ENV
        else
          echo "LIDARR_PATH=${{ github.workspace }}/lidarr/src/Lidarr/bin/Release/net6.0" >> $GITHUB_ENV
        fi

    - name: Build Brainarr Plugin
      working-directory: brainarr/Brainarr.Plugin
      run: |
        dotnet restore
        dotnet build -c Release

    - name: Run Tests
      working-directory: brainarr
      run: |
        if [ -d "Brainarr.Tests" ]; then
          dotnet test --no-build -c Release --logger "console;verbosity=detailed"
        fi
      shell: bash

    - name: Package Plugin
      if: success() && matrix.os == 'ubuntu-latest'
      working-directory: brainarr
      run: |
        mkdir -p output
        cd Brainarr.Plugin/bin/Release/net6.0
        zip -r ../../../../output/Brainarr-${{ github.sha }}.zip . -x "*.pdb" -x "Lidarr.*" -x "NzbDrone.*"

    - name: Upload Artifacts
      if: success() && matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: brainarr-plugin
        path: brainarr/output/*.zip

  test-integration:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Plugin
      uses: actions/download-artifact@v4
      with:
        name: brainarr-plugin

    - name: Setup Test Environment
      run: |
        # Could add integration tests with a Lidarr container here
        echo "Integration tests placeholder"

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build, test-integration]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Plugin
      uses: actions/download-artifact@v4
      with:
        name: brainarr-plugin

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: '*.zip'
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
