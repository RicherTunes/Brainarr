name: ðŸ“¦ Plugin Package

on:
  push:
    branches: [main]
    paths:
      - 'Brainarr.Plugin/**'
      - 'plugin.json'
      - 'manifest.json'
  workflow_dispatch:

permissions:
  contents: write  # Required for creating releases

jobs:
  package:
    name: Build Plugin Package
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Extract Lidarr Assemblies
      run: |
        bash scripts/extract-lidarr-assemblies.sh --mode full --output-dir ext/Lidarr/_output/net6.0
        echo "Extracted assemblies (sample):"
        ls -1 ext/Lidarr/_output/net6.0 | sed -n '1,40p'
        if [ ! -f ext/Lidarr/_output/net6.0/NLog.dll ]; then
          echo "ERROR: NLog.dll missing from extracted assemblies; plugin may bind to wrong NLog version." >&2
          exit 1
        fi

    - name: Build Plugin
      run: |
        dotnet restore Brainarr.Plugin/Brainarr.Plugin.csproj
        dotnet build Brainarr.Plugin/Brainarr.Plugin.csproj \
          --configuration Release \
          --no-restore \
          -p:LidarrPath="${{ github.workspace }}/ext/Lidarr/_output/net6.0"

    - name: Create Plugin Package
      run: |
        # Create package directory
        mkdir -p package/Brainarr

        # Copy plugin files
        cp Brainarr.Plugin/bin/Lidarr.Plugin.Brainarr.dll package/Brainarr/
        cp plugin.json package/Brainarr/
        cp manifest.json package/
        cp .lidarr.plugin package/

        # Create latest.zip for direct download
        cd package
        zip -r ../Brainarr-latest.zip .
        cd ..

    - name: Upload Package Artifact
      uses: actions/upload-artifact@v4
      with:
        name: brainarr-latest
        path: |
          Brainarr-latest.zip
          package/
        retention-days: 7

  smoke:
    name: Plugin Smoke (Container Mount)
    runs-on: ubuntu-latest
    needs: package
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download packaged artifact
      uses: actions/download-artifact@v4
      with:
        name: brainarr-latest
        path: plugin-dist

    - name: List artifact
      run: |
        ls -la plugin-dist
        ls -la plugin-dist/package/Brainarr || true

    - name: Start Lidarr with plugin mounted
      run: |
        set -e
        docker pull ghcr.io/hotio/lidarr:pr-plugins-2.13.3.4711
        docker run -d --name lidarr-smoke \
          -p 8686:8686 \
          -v "${{ github.workspace }}/plugin-dist/package/Brainarr:/config/plugins/RicherTunes/Brainarr:ro" \
          -e PUID=1000 -e PGID=1000 \
          ghcr.io/hotio/lidarr:pr-plugins-2.13.3.4711
        # Give it a moment to boot
        sleep 10
        echo "Container running: $(docker ps --filter name=lidarr-smoke --format '{{.Names}}')"

    - name: Verify plugin files are visible in container
      run: |
        set -e
        docker exec lidarr-smoke ls -la /config/plugins/RicherTunes/Brainarr
        docker exec lidarr-smoke test -f /config/plugins/RicherTunes/Brainarr/Lidarr.Plugin.Brainarr.dll
        docker exec lidarr-smoke test -f /config/plugins/RicherTunes/Brainarr/plugin.json

    - name: Check discovery logs (best-effort)
      continue-on-error: true
      run: |
        echo "Inspecting Lidarr logs for plugin discovery hints..."
        docker logs lidarr-smoke 2>&1 | rg -i "plugin|brainarr|import list" || echo "No explicit plugin discovery messages found"

    - name: Fetch API key from config and assert plugin via API
      run: |
        set -e
        APIKEY=$(docker exec lidarr-smoke sh -lc "sed -n 's:.*<ApiKey>\\(.*\\)</ApiKey>.*:\\1:p' /config/config.xml")
        echo "Using API key: ${APIKEY:0:4}..."
        # wait for API to be ready
        for i in $(seq 1 30); do
          curl -sS -H "X-Api-Key: $APIKEY" http://localhost:8686/api/v1/system/status >/dev/null 2>&1 && break
          sleep 2
        done
        # assert plugin present
        curl -sS -H "X-Api-Key: $APIKEY" http://localhost:8686/api/v1/system/plugins | grep -i Brainarr

    - name: Assert Import List schema presence
      run: |
        set -e
        APIKEY=$(docker exec lidarr-smoke sh -lc "sed -n 's:.*<ApiKey>\\(.*\\)</ApiKey>.*:\\1:p' /config/config.xml")
        echo "Checking Import List schema for Brainarr..."
        curl -sS -H "X-Api-Key: $APIKEY" http://localhost:8686/api/v1/importlist/schema | rg -i "Brainarr|AI Music Discovery"

    - name: Best-effort list fetch and log
      continue-on-error: true
      run: |
        APIKEY=$(docker exec lidarr-smoke sh -lc "sed -n 's:.*<ApiKey>\\(.*\\)</ApiKey>.*:\\1:p' /config/config.xml")
        echo "Fetching current Import Lists (best-effort)"
        curl -sS -H "X-Api-Key: $APIKEY" http://localhost:8686/api/v1/importlist | head -c 4096 || true

    - name: Cleanup
      if: always()
      run: |
        docker logs lidarr-smoke || true
        docker rm -f lidarr-smoke || true

    - name: Update Latest Pre-Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: latest
        name: "Latest Development Build"
        prerelease: true
        body: |
          ## ðŸ”„ Latest Development Build

          This is an automated build from the main branch.
          For stable releases, see the [releases page](https://github.com/${{ github.repository }}/releases).

          ### Installation

          **Via Lidarr UI:**
          1. Go to System â†’ Plugins
          2. Enter: `https://github.com/${{ github.repository }}`
          3. Click Install

          **Manual Installation:**
          Download and extract to your plugins folder.
        files: |
          Brainarr-latest.zip
