name: Nightly Perf/Stress

on:
  schedule:
    - cron: '0 6 * * *'  # 06:00 UTC daily
  workflow_dispatch:

concurrency:
  group: nightly-perf-stress-${{ github.ref }}
  cancel-in-progress: false

jobs:
  perf-stress:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Download Lidarr assemblies (plugins Docker)
        shell: bash
        env:
          LIDARR_DOCKER_VERSION: pr-plugins-2.14.1.4716
          LIDARR_DOCKER_DIGEST: sha256:83b3095113b70a7d013819ed2f6d56d047f28e1f67aa11b7820e280560446b62
        run: |
          set -euo pipefail
          mkdir -p ext/Lidarr/_output/net6.0
          IMAGE="ghcr.io/hotio/lidarr:${LIDARR_DOCKER_VERSION}"
          if [ -n "${LIDARR_DOCKER_DIGEST:-}" ]; then IMAGE="ghcr.io/hotio/lidarr@${LIDARR_DOCKER_DIGEST}"; fi
          echo "Using Docker image: ${IMAGE}"
          docker pull "${IMAGE}"
          docker create --name temp-lidarr "${IMAGE}" >/dev/null
          # Copy all runtime dependencies; avoids missing assemblies in perf/stress runs
          docker cp temp-lidarr:/app/bin/. ext/Lidarr/_output/net6.0/
          docker rm -f temp-lidarr >/dev/null
          ls -la ext/Lidarr/_output/net6.0/

      - name: Verify assemblies present
        shell: bash
        run: |
          set -euo pipefail
          test -f ext/Lidarr/_output/net6.0/Lidarr.Core.dll || { echo "Missing Lidarr.Core.dll in assemblies"; exit 1; }
          ls -la ext/Lidarr/_output/net6.0/

      - name: Set LIDARR_PATH
        run: echo "LIDARR_PATH=${{ github.workspace }}/ext/Lidarr/_output/net6.0" >> $GITHUB_ENV

      - name: Restore
        run: dotnet restore Brainarr.sln

      - name: Build
        run: dotnet build Brainarr.sln --no-restore --configuration Release -p:LidarrPath="${{ env.LIDARR_PATH }}"

      - name: Run Performance/Stress tests
        run: |
          set -euo pipefail
          mkdir -p TestResults

          # Run only Performance/Stress tests. If none are discovered, treat as success
          # until dedicated perf/stress tests are landed.
          set +e
          dotnet test Brainarr.sln --no-build --configuration Release \
            --verbosity normal \
            --settings Brainarr.Tests/test.runsettings \
            --filter "(Category=Performance|TestCategory=Performance|Category=Stress|TestCategory=Stress)" \
            --logger "trx;LogFileName=test-results.trx" \
            --results-directory TestResults/ 2>&1 | tee TestResults/perf_stress.log
          exit_code=${PIPESTATUS[0]}
          set -e

          # Allow the job to pass if no tests matched the filter.
          if [ "$exit_code" -ne 0 ]; then
            if grep -qi "No test is available" TestResults/perf_stress.log; then
              echo "No Performance/Stress tests found; skipping with success."
              exit 0
            fi
            exit "$exit_code"
          fi

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nightly-perf-stress-results
          path: TestResults/
