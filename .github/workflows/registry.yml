name: Registry Validation

on:
  push:
    branches: [ main ]
    paths:
      - 'Brainarr.Plugin/**'
      - 'Brainarr.Tests/**'
      - 'docs/models*.json'
      - 'Brainarr.Plugin/Services/Registry/**'
      - 'Brainarr.Tests/Services/Registry/**'
      - 'plugin.json'
      - 'manifest.json'
      - '.github/workflows/registry.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Brainarr.Plugin/**'
      - 'Brainarr.Tests/**'
      - 'docs/models*.json'
      - 'Brainarr.Plugin/Services/Registry/**'
      - 'Brainarr.Tests/Services/Registry/**'
      - 'plugin.json'
      - 'manifest.json'
      - '.github/workflows/registry.yml'
  workflow_dispatch:
  workflow_call:

env:
  CI: true
  LIDARR_DOCKER_VERSION: pr-plugins-2.14.1.4716
  LIDARR_DOCKER_DIGEST: sha256:83b3095113b70a7d013819ed2f6d56d047f28e1f67aa11b7820e280560446b62

jobs:
  registry-validation:
    name: Registry Validation
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    defaults:
      run:
        shell: bash
    env:
      LIDARR_OUTPUT: ${{ github.workspace }}/ext/Lidarr-docker/_output/net6.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.SUBMODULES_TOKEN || github.token }}

      - name: Force PAT for submodules
        if: ${{ secrets.SUBMODULES_TOKEN != '' }}
        run: git config --global url."https://x-access-token:${{ secrets.SUBMODULES_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Extract Lidarr assemblies (plugins Docker)
        env:
          LIDARR_DOCKER_VERSION: ${{ env.LIDARR_DOCKER_VERSION }}
          LIDARR_DOCKER_DIGEST: ${{ env.LIDARR_DOCKER_DIGEST }}
        run: |
          set -euo pipefail
          timeout 12m bash scripts/extract-lidarr-assemblies.sh --mode minimal --output-dir "${LIDARR_OUTPUT}"

      - name: Verify Lidarr assemblies
        run: test -f "${LIDARR_OUTPUT}/Lidarr.Core.dll"

      - name: Restore solution
        run: timeout 10m dotnet restore Brainarr.sln

      - name: Build solution (Release)
        run: timeout 20m dotnet build Brainarr.sln --configuration Release --no-restore -p:LidarrPath="${LIDARR_OUTPUT}"

      - name: Run registry-focused tests
        run: dotnet test Brainarr.Tests/Brainarr.Tests.csproj --configuration Release --no-build -p:LidarrPath="${LIDARR_OUTPUT}" --filter "FullyQualifiedName~Registry"

      - name: Ensure registry tests discovered
        run: |
          set -euo pipefail
          dotnet test Brainarr.sln --configuration Release --no-build --list-tests > registry-tests.txt
          if ! grep -q "Registry" registry-tests.txt; then
            echo "No Registry tests discovered"
            exit 1
          fi
