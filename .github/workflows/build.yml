name: Build

on:
  push:
    branches: [ main, develop, '*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
        
    - name: Initialize Lidarr submodule
      run: |
        git submodule update --init --recursive || true
        if [ ! -d "ext/Lidarr" ]; then
          echo "Lidarr submodule not found, cloning..."
          git clone --branch plugins https://github.com/Lidarr/Lidarr.git ext/Lidarr
        fi
        
    - name: Build Lidarr assemblies
      run: |
        cd ext/Lidarr
        dotnet build src/NzbDrone.Core/Lidarr.Core.csproj \
          -c Release \
          -o _output/net6.0 \
          -p:EnableAnalyzers=false \
          -p:EnforceCodeStyleInBuild=false
        dotnet build src/NzbDrone.Common/Lidarr.Common.csproj \
          -c Release \
          -o _output/net6.0 \
          -p:EnableAnalyzers=false \
          -p:EnforceCodeStyleInBuild=false
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build plugin
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal
      continue-on-error: true
      
    - name: Package plugin
      run: |
        mkdir -p release
        cp Brainarr.Plugin/bin/Release/net6.0/Lidarr.Plugin.Brainarr.dll release/
        cd release
        zip -r ../Brainarr-${{ github.run_number }}.zip .
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Brainarr-${{ github.run_number }}
        path: Brainarr-*.zip

  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
        
    - name: Initialize Lidarr submodule
      run: |
        git submodule update --init --recursive
        if (!(Test-Path "ext/Lidarr")) {
          Write-Host "Lidarr submodule not found, cloning..."
          git clone --branch plugins https://github.com/Lidarr/Lidarr.git ext/Lidarr
        }
      shell: pwsh
        
    - name: Build Lidarr assemblies
      run: |
        cd ext/Lidarr
        dotnet build src/NzbDrone.Core/Lidarr.Core.csproj `
          -c Release `
          -o _output/net6.0 `
          -p:EnableAnalyzers=false `
          -p:EnforceCodeStyleInBuild=false
        dotnet build src/NzbDrone.Common/Lidarr.Common.csproj `
          -c Release `
          -o _output/net6.0 `
          -p:EnableAnalyzers=false `
          -p:EnforceCodeStyleInBuild=false
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build plugin
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal
      continue-on-error: true

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build, build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: Brainarr-${{ github.run_number }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: Release v1.0.${{ github.run_number }}
        draft: true
        prerelease: false
        files: Brainarr-*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}