<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>disable</Nullable>
    <AssemblyName>Lidarr.Plugin.Brainarr</AssemblyName>
    <RootNamespace>NzbDrone.Core.ImportLists.Brainarr</RootNamespace>
    <OutputPath>bin\</OutputPath>
    
    <!-- Assembly and build configuration -->
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    
    <!-- Warning suppression for clean build -->
    <NoWarn>CS8618;CS8625;CS0618;CS8601;CS8602;CS8604;CS8600;CS8603;CS0168;CS1998;NU1903</NoWarn>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
  </PropertyGroup>

  <!-- Package dependencies -->
  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="NLog" Version="5.4.0" />
    <PackageReference Include="FluentValidation" Version="9.5.4" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="6.0.3" />
    
    <!-- Resolve version conflicts by matching Lidarr's version -->
    <PackageReference Include="System.Formats.Asn1" Version="8.0.0" />
  </ItemGroup>

  <!-- Lidarr assemblies reference from submodule (TrevTV style) -->
  <ItemGroup>
    <ProjectReference Include="..\ext\Lidarr\src\NzbDrone.Core\Lidarr.Core.csproj">
      <Private>false</Private>
    </ProjectReference>
    <ProjectReference Include="..\ext\Lidarr\src\NzbDrone.Common\Lidarr.Common.csproj">
      <Private>false</Private>
    </ProjectReference>
    <ProjectReference Include="..\ext\Lidarr\src\Lidarr.Api.V1\Lidarr.Api.V1.csproj">
      <Private>false</Private>
    </ProjectReference>
    <ProjectReference Include="..\ext\Lidarr\src\Lidarr.Http\Lidarr.Http.csproj">
      <Private>false</Private>
    </ProjectReference>
  </ItemGroup>

  <!-- Copy plugin manifest to output -->
  <ItemGroup>
    <Content Include="..\plugin.json" Condition="Exists('..\plugin.json')">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

</Project>