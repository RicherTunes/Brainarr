<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>disable</Nullable>
    <AssemblyName>Lidarr.Plugin.Brainarr</AssemblyName>
    <RootNamespace>NzbDrone.Core.ImportLists.Brainarr</RootNamespace>
    <OutputPath>bin\</OutputPath>
    
    <!-- Assembly and build configuration -->
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    
    <!-- Warning suppression for clean build -->
    <NoWarn>CS8618;CS8625;CS0618;CS8601;CS8602;CS8604;CS8600;CS8603;CS0168;CS1998;NU1903</NoWarn>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
  </PropertyGroup>

  <!-- Package dependencies -->
  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" />
    <PackageReference Include="NLog" />
    <PackageReference Include="FluentValidation" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" />
    
    <!-- Resolve version conflicts by matching Lidarr's version -->
    <PackageReference Include="System.Formats.Asn1" />
  </ItemGroup>

  <!-- Lidarr assemblies reference -->
  <!-- Priority order:
       1. Command line property: -p:LidarrPath=...
       2. Environment variable: LIDARR_PATH
       3. Local checkout: ../ext/Lidarr/_output/net6.0
       4. GitHub Actions: ../lidarr/_output/net6.0
       5. System installation paths
  -->
  <PropertyGroup>
    <LidarrPath Condition="'$(LidarrPath)' == ''">$(LIDARR_PATH)</LidarrPath>
    <LidarrPath Condition="'$(LidarrPath)' == '' AND Exists('..\ext\Lidarr\_output\net6.0')">..\ext\Lidarr\_output\net6.0</LidarrPath>
    <LidarrPath Condition="'$(LidarrPath)' == '' AND Exists('..\ext\Lidarr\src\Lidarr\bin\Release\net6.0')">..\ext\Lidarr\src\Lidarr\bin\Release\net6.0</LidarrPath>
    <LidarrPath Condition="'$(LidarrPath)' == '' AND Exists('..\..\lidarr\_output\net6.0')">..\..\lidarr\_output\net6.0</LidarrPath>
    <LidarrPath Condition="'$(LidarrPath)' == '' AND Exists('C:\ProgramData\Lidarr\bin')">C:\ProgramData\Lidarr\bin</LidarrPath>
    <LidarrPath Condition="'$(LidarrPath)' == '' AND Exists('/opt/Lidarr')">/opt/Lidarr</LidarrPath>
    <LidarrPath Condition="'$(LidarrPath)' == '' AND Exists('/usr/lib/lidarr/bin')">/usr/lib/lidarr/bin</LidarrPath>
  </PropertyGroup>
  
  <ItemGroup Condition="'$(LidarrPath)' != ''">
    <Reference Include="Lidarr.Core">
      <HintPath>$(LidarrPath)\Lidarr.Core.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Lidarr.Common">
      <HintPath>$(LidarrPath)\Lidarr.Common.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Lidarr.Api.V1">
      <HintPath>$(LidarrPath)\Lidarr.Api.V1.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Lidarr.Http">
      <HintPath>$(LidarrPath)\Lidarr.Http.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>
  
  <!-- Require Lidarr to be present for build -->
  <Target Name="ValidateLidarrPath" BeforeTargets="Build">
    <Error Condition="'$(LidarrPath)' == ''" Text="Lidarr installation not found. Run '.\setup-lidarr.ps1' or set LIDARR_PATH environment variable to your Lidarr installation directory" />
    <Message Condition="'$(LidarrPath)' != ''" Text="Using Lidarr from: $(LidarrPath)" Importance="high" />
  </Target>

  <!-- Copy plugin manifest to output -->
  <ItemGroup>
    <Content Include="..\plugin.json" Condition="Exists('..\plugin.json')">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

</Project>